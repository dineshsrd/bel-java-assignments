Background
    You are tasked with designing and implementing a Library Management System in Java. This system will help librarians manage books, patrons, and lending processes efficiently. Your solution should demonstrate your understanding of Object-Oriented Programming (OOP), SOLID principles, and relevant design patterns.

Note: This assignment focuses on demonstrating your understanding of Java and OOP concepts. Don't worry about persistence, databases, or external APIs at this stage.

Core Requirements

    Book Management
        Implement a Book class with attributes such as title, author, ISBN, and publication year.
        Create a system to add, remove, and update books in the library inventory.
        Implement a search functionality to find books by title, author, or ISBN.

    Patron Management
        Design a Patron class to represent library members.
        Implement functionality to add new patrons and update their information.
        Create a system to track patron borrowing history.

    Lending Process
        Implement book checkout and return functionalities.

    Inventory Management
        Keep track of available and borrowed books.

Optional Extension
Extend your Library Management System with the following advanced features:

    Multi-branch Support
        Modify your system to support multiple library branches.
        Design a system for transferring books between branches.

    Reservation System
        Allow patrons to reserve books that are currently checked out.
        Implement a notification system for when reserved books become available.

    Recommendation System
        Implement a book recommendation system based on patron borrowing history and preferences.
        Use appropriate data structures and algorithms to efficiently generate recommendations.

Technical Requirements

    Use appropriate OOP concepts (inheritance, encapsulation, polymorphism, abstraction).
    Apply SOLID principles in your design.
    Implement at least two design patterns relevant to the problem (e.g., Observer, Factory, Strategy).
    Use Java collections appropriately (e.g., List, Set, Map).
    Use a logging framework to log important events and errors.

Evaluation Criteria

    Correct implementation of required functionalities
    Proper application of OOP concepts and SOLID principles
    Appropriate use of design patterns
    Code quality, readability, and organization
    Clarity and completeness of design documentation

Submission guidelines

    Deliverables
        Java source code implementing the Library Management System.
        Write a clear and concise README file.
        A class diagram showing the relationships between your classes (Add this in your Readme)
        To submit your project, please provide a link to your GitHub repository and your submission should be a PR.
        [Important] Make sure the repository is public.

